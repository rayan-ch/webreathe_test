{% extends 'base.html.twig' %}

{% block title %}Graph{% endblock %}

{% block body %}


<div class="card shadow mb-4">
	<div class="card-body">
		<div class="card-header py-3">
			<h6 class="m-0 font-weight-bold text-primary">{{type.nom}}</h6>
		</div>
		<div class="chart-area">
			<canvas id="myAreaChart">
				<script>
					const LIMIT_DATA_IN_CHART = 20; // Limiter l'affichage du graphique aux 20 dernières données
					let x = [];
					let y = [];

					$.ajax({
						url: 'http://localhost:8000/api/modules/{{ id }}',
						method: 'GET',
						success: function(response) {
							let keys = Object.keys(response.historique.donnees);
							let date = null
							let start_index = 0;
							if (keys.length > LIMIT_DATA_IN_CHART) {
								start_index = keys.length - LIMIT_DATA_IN_CHART;
							}
							for (let i = start_index; i < keys.length; i++) {
								let time = keys[i];
								let [datePart, timePart] = time.split(' ');
								date = datePart
								x.push(timePart);
								y.push(response.historique.donnees[time]);
							}
							console.log(x);

							// Créez le graphique une fois que les données ont été récupérées avec succès
							let ctx = document.getElementById("myAreaChart");
							let myHourlyChart = new Chart(ctx, {
								type: 'line',
								data: {
									labels: x,
									datasets: [{
										label: '{{ type.grandeurPhysique }} ',
										data: y,
										borderColor: 'rgba(78, 115, 223, 1)',
										backgroundColor: 'rgba(78, 115, 223, 0.1)',
										borderWidth: 2
									}]
								},
								options: {
									scales: {
										yAxes: [{
											scaleLabel: {
												display: true,
												labelString: '{{ type.grandeurPhysique }} ({{ type.unite }})'
											}
										}],
										xAxes: [{
											scaleLabel: {
												display: true,
												labelString: date
											}
										}]
									}
								}
							});
						},
						error: function(xhr, status, error) {
							console.error(error);
						}
					});

				</script>
			</canvas>
		</div>
		<hr>
        <span>Description : {{description}}</span>
	</div>
</div>

{% endblock %}

